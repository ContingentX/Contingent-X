<div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">
    <h1 class="none page-header">Dashboard:</h1>


    <h4 class="none sub-header">Du bist
        <check if="{{ @_rights == 'admins' }}">
            <true>Admin</true>
            <false>User</false>
        </check>
    </h4>

    <br>



    <div>
        <div class="countdown styled" data-date="{{ @data }}"></div>
    </div>
    <p class="info">Sie sind tot!</p>




    <check if="{{ @_rights == 'admins' }}">
        <true>
            <!--admin-->
        </true>
    </check>

</div>
</div>
</div>

<!-- Bootstrap core JavaScript
================================================== -->
<!-- Placed at the end of the document so the pages load faster -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script type="text/javascript" src="../app/assets/js/jquery.countdown.js"></script>
<script type="text/javascript">
    $(function () {
        var endDate = "{{ @data }}";

        $('.countdown.simple').countdown({
            date: endDate,
            onEnd: function () {
                $(this.el).addClass('ended');
            }
        });

        $('.countdown.styled').countdown({
            date: endDate,
            render: function (data) {
                $(this.el).html(
                        "<div id='c'>" + this.leadingZeros(data.years, 4) + " <span>years</span></div>" +
                        "<div id='c'>" + this.leadingZeros(data.days, 3) + " <span>days</span></div>" +
                        "<div id='c'>" + this.leadingZeros(data.hours, 2) + " <span>hrs</span></div>" +
                        "<div id='c'>" + this.leadingZeros(data.min, 2) + " <span>min</span></div>" +
                        "<div id='c'>" + this.leadingZeros(data.sec, 2) + " <span>sec</span></div>"
                );
            },
            onEnd: function () {
                $(this.el).addClass('die');
                $('.info').addClass('info-one');
                $('.background').addClass('down');
            }
        });

        $('.countdown.callback').countdown({
            date: +(new Date) + 10000,
            render: function (data) {
                $(this.el).text(this.leadingZeros(data.sec, 2) + " sec");
            },
            onEnd: function () {
                $(this.el).addClass('ended');
            }
        }).on("click", function () {
            $(this).removeClass('ended').data('countdown').update(+(new Date) + 10000).start();
        });

        // End time for diff purposes
        var endTimeDiff = new Date().getTime() + 15000;
        // This is server's time
        var timeThere = new Date();
        // This is client's time (delayed)
        var timeHere = new Date(timeThere.getTime() - 5434);
        // Get the difference between client time and server time
        var diff_ms = timeHere.getTime() - timeThere.getTime();
        // Get the rounded difference in seconds
        var diff_s = diff_ms / 1000 | 0;

        var notice = [];
        notice.push('Server time: ' + timeThere.toDateString() + ' ' + timeThere.toTimeString());
        notice.push('Your time: ' + timeHere.toDateString() + ' ' + timeHere.toTimeString());
        notice.push('Time difference: ' + diff_s + ' seconds (' + diff_ms + ' milliseconds to be precise). Your time is a bit behind.');

        $('.offset-notice').html(notice.join('<br />'));

        $('.offset-server .countdown').countdown({
            date: endTimeDiff,
            offset: diff_s * 1000,
            onEnd: function () {
                $(this.el).addClass('ended');
            }
        });

        $('.offset-client .countdown').countdown({
            date: endTimeDiff,
            onEnd: function () {
                $(this.el).addClass('ended');
            }
        });

    });
</script>
<style>
    .none {display:none; }
    .background {
        background: #000;
        text-align: center;
        padding: 20px;
        -webkit-box-shadow: inset 0px 0px 100px 11px rgba(23, 208, 45, 0.41);
        -moz-box-shadow:    inset 0px 0px 100px 11px rgba(23, 208, 45, 0.41);
        box-shadow:         inset 0px 0px 100px 11px rgba(23, 208, 45, 0.41);
    }

    .background.down {
        background: #000;
        text-align: center;
        padding: 20px;
        -webkit-box-shadow: inset 0px 11px 100px 11px rgba(208, 24, 24, 0.41);
        -moz-box-shadow:    inset 0px 11px 100px 11px rgba(208, 24, 24, 0.41);
        box-shadow:         inset 0px 11px 100px 11px rgba(208, 24, 24, 0.41);
    }
</style>
</body>
</html>